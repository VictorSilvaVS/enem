#!/usr/bin/env python3
"""
Script para inicializar o banco de dados do sistema de estudos ENEM
"""

from main import create_app
from app.structure.database import db
from app.structure.database.models import User, Subject, Topic, StudyMaterial, Question, Answer

def init_database():
    """Inicializa o banco de dados"""
    print("üîß Inicializando o banco de dados...")
    
    # Criar aplica√ß√£o Flask
    app = create_app()
    
    with app.app_context():
        # Verificar se as tabelas j√° existem
        print("üìã Verificando tabelas...")
        try:
            # Tentar fazer uma consulta simples para verificar se as tabelas existem
            User.query.first()
            print("‚úÖ Tabelas j√° existem!")
        except:
            print("üìã Criando tabelas...")
            db.create_all()
            print("‚úÖ Tabelas criadas com sucesso!")
        
        # Verificar se j√° existem dados
        user_count = User.query.count()
        if user_count > 0:
            print(f"‚ö†Ô∏è  Banco de dados j√° cont√©m {user_count} usu√°rios. Pulando popula√ß√£o inicial.")
            return
        
        print("üìä Populando banco de dados com dados iniciais...")
        
        # Criar usu√°rio administrador
        admin = User(
            username='admin',
            email='admin@enem.com',
            first_name='Administrador',
            last_name='Sistema',
            is_admin=True,
            is_active=True
        )
        admin.set_password('admin123')
        db.session.add(admin)
        
        # Criar usu√°rio de teste
        test_user = User(
            username='teste',
            email='teste@enem.com',
            first_name='Usu√°rio',
            last_name='Teste',
            is_admin=False,
            is_active=True
        )
        test_user.set_password('teste123')
        db.session.add(test_user)
        
        # Criar √°reas de conhecimento
        areas = {
            'linguagens': 'Linguagens, C√≥digos e suas Tecnologias',
            'humanas': 'Ci√™ncias Humanas e suas Tecnologias',
            'natureza': 'Ci√™ncias da Natureza e suas Tecnologias',
            'matematica': 'Matem√°tica e suas Tecnologias'
        }
        
        subjects_data = {
            'linguagens': [
                {'name': 'L√≠ngua Portuguesa', 'description': 'Gram√°tica, Literatura e Interpreta√ß√£o de Texto'},
                {'name': 'L√≠ngua Estrangeira', 'description': 'Ingl√™s ou Espanhol'},
                {'name': 'Arte', 'description': 'Hist√≥ria da Arte e Movimentos Art√≠sticos'},
                {'name': 'Educa√ß√£o F√≠sica', 'description': 'Esportes e Atividades F√≠sicas'},
                {'name': 'Tecnologias da Informa√ß√£o', 'description': 'Inform√°tica e Redes Sociais'}
            ],
            'humanas': [
                {'name': 'Hist√≥ria', 'description': 'Hist√≥ria Geral e do Brasil'},
                {'name': 'Geografia', 'description': 'Geografia Geral e do Brasil'},
                {'name': 'Filosofia', 'description': 'Filosofia Antiga e Contempor√¢nea'},
                {'name': 'Sociologia', 'description': 'Sociologia e Antropologia'}
            ],
            'natureza': [
                {'name': 'Biologia', 'description': 'Biologia Celular e Evolu√ß√£o'},
                {'name': 'F√≠sica', 'description': 'Mec√¢nica, Termologia e Eletricidade'},
                {'name': 'Qu√≠mica', 'description': 'Qu√≠mica Geral e Org√¢nica'}
            ],
            'matematica': [
                {'name': 'Matem√°tica', 'description': '√Ålgebra, Geometria e Trigonometria'}
            ]
        }
        
        subjects = {}
        for area_key, area_name in areas.items():
            for subject_info in subjects_data[area_key]:
                subject = Subject(
                    name=subject_info['name'],
                    area=area_name,
                    description=subject_info['description']
                )
                db.session.add(subject)
                db.session.flush()  # Para obter o ID
                subjects[subject_info['name']] = subject
        
        # Criar t√≥picos para cada mat√©ria
        topics_data = {
            'L√≠ngua Portuguesa': [
                'Gram√°tica Normativa', 'Interpreta√ß√£o de Texto', 'Literatura Brasileira',
                'Literatura Portuguesa', 'Produ√ß√£o Textual', 'Figuras de Linguagem'
            ],
            'Hist√≥ria': [
                'Hist√≥ria Antiga', 'Hist√≥ria Medieval', 'Hist√≥ria Moderna',
                'Hist√≥ria Contempor√¢nea', 'Hist√≥ria do Brasil', 'Hist√≥ria da Am√©rica'
            ],
            'Geografia': [
                'Geografia F√≠sica', 'Geografia Humana', 'Geografia Econ√¥mica',
                'Geografia Pol√≠tica', 'Geografia do Brasil', 'Geografia Mundial'
            ],
            'Matem√°tica': [
                '√Ålgebra', 'Geometria Plana', 'Geometria Espacial', 'Trigonometria',
                'Fun√ß√µes', 'Estat√≠stica', 'Probabilidade'
            ],
            'Biologia': [
                'Biologia Celular', 'Gen√©tica', 'Evolu√ß√£o', 'Ecologia',
                'Fisiologia Humana', 'Bot√¢nica', 'Zoologia'
            ],
            'F√≠sica': [
                'Mec√¢nica', 'Termologia', '√ìptica', 'Eletricidade',
                'Magnetismo', 'Ondas', 'F√≠sica Moderna'
            ],
            'Qu√≠mica': [
                'Qu√≠mica Geral', 'Qu√≠mica Inorg√¢nica', 'Qu√≠mica Org√¢nica',
                'F√≠sico-Qu√≠mica', 'Qu√≠mica Ambiental', 'Bioqu√≠mica'
            ]
        }
        
        topics = {}
        for subject_name, topic_list in topics_data.items():
            if subject_name in subjects:
                subject = subjects[subject_name]
                for topic_name in topic_list:
                    topic = Topic(
                        name=topic_name,
                        subject_id=subject.id,
                        description=f'Conte√∫do sobre {topic_name}'
                    )
                    db.session.add(topic)
                    db.session.flush()
                    topics[f"{subject_name} - {topic_name}"] = topic
        
        # Criar materiais de estudo
        study_materials = []
        for topic_key, topic in topics.items():
            material = StudyMaterial(
                title=f'Material de Estudo - {topic.name}',
                content=f'Conte√∫do detalhado sobre {topic.name}. Este material inclui conceitos fundamentais, exemplos pr√°ticos e exerc√≠cios resolvidos.',
                topic_id=topic.id,
                subject_id=topic.subject_id,
                material_type='text',
                difficulty_level=2,
                estimated_time=30
            )
            db.session.add(material)
            study_materials.append(material)
        
        # Criar quest√µes de exemplo
        questions_data = [
            {
                'question': 'Qual √© a fun√ß√£o sint√°tica da palavra "rapidamente" na frase "Ele correu rapidamente"?',
                'options': ['Sujeito', 'Predicado', 'Adjunto Adverbial', 'Complemento Nominal'],
                'correct_answer': 2,
                'explanation': 'A palavra "rapidamente" √© um adjunto adverbial de modo, pois modifica o verbo "correu" indicando como a a√ß√£o foi realizada.',
                'subject': 'L√≠ngua Portuguesa'
            },
            {
                'question': 'Em que ano o Brasil se tornou independente de Portugal?',
                'options': ['1808', '1822', '1889', '1891'],
                'correct_answer': 1,
                'explanation': 'O Brasil se tornou independente de Portugal em 7 de setembro de 1822, com o Grito do Ipiranga.',
                'subject': 'Hist√≥ria'
            },
            {
                'question': 'Qual √© a capital do Brasil?',
                'options': ['Rio de Janeiro', 'S√£o Paulo', 'Bras√≠lia', 'Salvador'],
                'correct_answer': 2,
                'explanation': 'Bras√≠lia √© a capital federal do Brasil desde 1960, quando foi inaugurada.',
                'subject': 'Geografia'
            },
            {
                'question': 'Qual √© o resultado de 2x + 3 = 11?',
                'options': ['x = 3', 'x = 4', 'x = 5', 'x = 6'],
                'correct_answer': 1,
                'explanation': '2x + 3 = 11 ‚Üí 2x = 11 - 3 ‚Üí 2x = 8 ‚Üí x = 4',
                'subject': 'Matem√°tica'
            },
            {
                'question': 'Qual organela √© respons√°vel pela produ√ß√£o de energia na c√©lula?',
                'options': ['N√∫cleo', 'Mitoc√¥ndria', 'Ret√≠culo Endoplasm√°tico', 'Complexo de Golgi'],
                'correct_answer': 1,
                'explanation': 'A mitoc√¥ndria √© a organela respons√°vel pela produ√ß√£o de energia atrav√©s da respira√ß√£o celular.',
                'subject': 'Biologia'
            }
        ]
        
        for q_data in questions_data:
            if q_data['subject'] in subjects:
                # Encontrar um t√≥pico da mat√©ria para associar a quest√£o
                subject = subjects[q_data['subject']]
                topic = Topic.query.filter_by(subject_id=subject.id).first()
                
                if topic:
                    question = Question(
                        question_text=q_data['question'],
                        question_type='multiple_choice',
                        difficulty_level=1,
                        topic_id=topic.id,
                        subject_id=subject.id
                    )
                    db.session.add(question)
                    db.session.flush()
                    
                    # Criar op√ß√µes de resposta
                    for i, option_text in enumerate(q_data['options']):
                        answer = Answer(
                            answer_text=option_text,
                            question_id=question.id,
                            is_correct=(i == q_data['correct_answer']),
                            explanation=q_data['explanation'] if i == q_data['correct_answer'] else None
                        )
                        db.session.add(answer)
        
        # Commit das altera√ß√µes
        db.session.commit()
        print("‚úÖ Banco de dados populado com sucesso!")
        print(f"üìä Dados criados:")
        print(f"   - {User.query.count()} usu√°rios")
        print(f"   - {Subject.query.count()} mat√©rias")
        print(f"   - {Topic.query.count()} t√≥picos")
        print(f"   - {StudyMaterial.query.count()} materiais de estudo")
        print(f"   - {Question.query.count()} quest√µes")
        print(f"   - {Answer.query.count()} respostas")

if __name__ == '__main__':
    init_database()
